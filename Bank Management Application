import java.io.*;
import java.util.*;
import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.stage.Stage;
import javafx.geometry.Pos;
import javafx.geometry.Insets;
import javafx.geometry.*;

public class BankApp extends Application
{
    private void saveNewAccountDetails(String newUsername, String newPassword)
    {
        try(FileWriter writer = new FileWriter("New_Account_Details.txt", true))
        {
            String line = newUsername + "," + newPassword + "\n";
            
            writer.write(line);
        }
        catch(IOException exception)
        {
            System.err.println(exception.getMessage());
        }
    }
    
    private boolean validateLogin(String inputUsername, String inputPassword) {
        String filePath = "New_Account_Details.txt";
        try (Scanner fileScanner = new Scanner(new File(filePath))) {
            
            while (fileScanner.hasNextLine()) {
                String line = fileScanner.nextLine();
                String[] parts = line.split(",");
                if (parts.length >= 2) {
                    String storedUsername = parts[0].trim();
                    String storedPassword = parts[1].trim();

                    if (inputUsername.equals(storedUsername) && inputPassword.equals(storedPassword)) {
                        return true;
                    }
                }
            }
            return false; 
            
        } catch (FileNotFoundException e) {
            System.err.println("Validation Error: Account details file not found. File may need to be created first.");
            return false;
        }
    }
    
    @Override
    public void start(Stage stage) throws IOException,IOException
    {
        //Scene 1: LOGIN PAGE
        Label welcomeMessageLabel = new Label("Welcome to our Bank Application!");
        welcomeMessageLabel.setStyle("-fx-font-size: 20pt; -fx-font-weight: bold;");
        
        Label bankUsernameLabel = new Label("Username:");
        bankUsernameLabel.setStyle("-fx-font-size: 14pt;");
        TextField bankUsernameTextField = new TextField();
        bankUsernameTextField.setStyle("-fx-padding: 10px 25px;");
        
        Label bankAccountNumberLabel = new Label("Bank Account Number:");
        bankAccountNumberLabel.setStyle("-fx-font-size: 14pt;");
        TextField bankAccountNumberTextField = new TextField();
        bankAccountNumberTextField.setStyle("-fx-padding: 10px 25px;");
        
        Label passwordLabel = new Label("Password:");
        passwordLabel.setStyle("-fx-font-size: 14pt;");
        PasswordField passwordField = new PasswordField();
        passwordField.setStyle("-fx-padding: 10px 25px;");
        
        Button loginButton = new Button("LOGIN");
        loginButton.setStyle("-fx-padding: 10px 20px;");
        
        
        Label accountExistenceStatusLabel = new Label("Account status");
        
        
        
        
        Label newUserLabel = new Label("New user? Create a account here!");
        newUserLabel.setStyle("-fx-font-size: 14pt;");
        
        Label createUsernameLabel = new Label("Create a username: ");
        createUsernameLabel.setStyle("-fx-font-size: 12pt;");
        TextField createUsernameTextField = new TextField();
        createUsernameTextField.setStyle("-fx-padding: 10px 25px;");
        
        Label createPasswordLabel = new Label("Create a password: ");
        createPasswordLabel.setStyle("-fx-font-size: 12pt;");
        TextField createPasswordTextField = new TextField();
        createPasswordTextField.setStyle("-fx-padding: 10px 25px;");
        
        Button createAccountButton = new Button("Create");
        createAccountButton.setStyle("-fx-padding: 10px 25px;");
        
        //File storage for new user accounts
        createAccountButton.setOnAction(event -> {
            saveNewAccountDetails(createUsernameTextField.getText(), createPasswordTextField.getText());
            
            accountExistenceStatusLabel.setText("Account created successfully! You can login now.");
            accountExistenceStatusLabel.setStyle("-fx-text-fill: blue;");
        });
        
        
        
        HBox topHBox = new HBox();
        topHBox.setAlignment(Pos.CENTER);
        topHBox.getChildren().addAll(welcomeMessageLabel);
        
        GridPane gridPaneLayout = new GridPane();
        gridPaneLayout.setHgap(10);
        gridPaneLayout.setVgap(10);
        //gridPaneLayout.setAlignment(Pos.CENTER);
        gridPaneLayout.setPadding(new Insets(50, 0, 0, 250));
        
        gridPaneLayout.add(bankUsernameLabel, 0, 0);
        gridPaneLayout.add(bankUsernameTextField, 1, 0);
        gridPaneLayout.add(bankAccountNumberLabel, 0, 1);
        gridPaneLayout.add(bankAccountNumberTextField, 1, 1);
        gridPaneLayout.add(passwordLabel, 0, 2);
        gridPaneLayout.add(passwordField, 1, 2);
        gridPaneLayout.setHalignment(loginButton, HPos.CENTER);
        gridPaneLayout.add(loginButton, 0, 3, 2, 1);
        gridPaneLayout.setHalignment(accountExistenceStatusLabel, HPos.CENTER);
        gridPaneLayout.add(accountExistenceStatusLabel, 0, 4, 2, 1);
        
        HBox newUserHBox = new HBox();
        newUserHBox.setAlignment(Pos.CENTER);
        newUserHBox.getChildren().addAll(newUserLabel);
        
        HBox createButtonHBox = new HBox();
        createButtonHBox.setAlignment(Pos.CENTER);
        createButtonHBox.getChildren().addAll(createAccountButton);
        
        GridPane bottomGridPaneLayout = new GridPane();
        bottomGridPaneLayout.setHgap(10);
        bottomGridPaneLayout.setVgap(10);
        bottomGridPaneLayout.setAlignment(Pos.CENTER);
        bottomGridPaneLayout.add(createUsernameLabel, 0, 0);
        bottomGridPaneLayout.add(createUsernameTextField, 1, 0);
        bottomGridPaneLayout.add(createPasswordLabel, 0, 1);
        bottomGridPaneLayout.add(createPasswordTextField, 1, 1);
        
        VBox bottomVBox = new VBox();
        bottomVBox.setSpacing(15);
        bottomVBox.setPadding(new Insets(50,0,250,0));
        bottomVBox.getChildren().addAll(newUserHBox, bottomGridPaneLayout, createButtonHBox);
        
        BorderPane rootBorderPane1 = new BorderPane();
        rootBorderPane1.setTop(topHBox);
        rootBorderPane1.setCenter(gridPaneLayout);
        rootBorderPane1.setBottom(bottomVBox);
        
        //Scene 2: Account Details Display
        Label accountBalanceLabel = new Label("Account Balance");
        Label accountBalance = new Label("************");
        
        Button showBalanceButton = new Button("Show balance");
        showBalanceButton.setOnAction(event -> {
            accountBalance.setText("123456");
        });
        
        Button hideBalanceButton = new Button("Hide balance");
        hideBalanceButton.setOnAction(event -> {
            accountBalance.setText("************");
        });
        
        VBox box = new VBox(10);
        box.getChildren().addAll(accountBalanceLabel, accountBalance, showBalanceButton, hideBalanceButton);
        
        Scene AccountInformationDisplayScene = new Scene(box, 900, 700);
        
        
        Scene loginPageScene = new Scene(rootBorderPane1, 900, 700);
        stage.setScene(loginPageScene);
        
        loginButton.setOnAction(event -> {
            String username = bankUsernameTextField.getText();
            String password = passwordField.getText();
            
            accountExistenceStatusLabel.setText("Attempting to log in...");
            accountExistenceStatusLabel.setStyle("-fx-text-fill: orange;");

            // Basic input validation
            if (username.isEmpty() || password.isEmpty()) {
                accountExistenceStatusLabel.setText("Please enter both username and password.");
                accountExistenceStatusLabel.setStyle("-fx-text-fill: red; -fx-font-weight: bold;");
                return;
            }
            
            // Validate credentials against the stored file data
            if (validateLogin(username, password)) {
                 accountExistenceStatusLabel.setText("Login Successful!");
                 accountExistenceStatusLabel.setStyle("-fx-text-fill: blue; -fx-font-weight: bold;");
                 
                 // Clear input fields on success
                 bankUsernameTextField.clear();
                 passwordField.clear();
            } else {
                 accountExistenceStatusLabel.setText("Login Failed. Invalid username or password.");
                 accountExistenceStatusLabel.setStyle("-fx-text-fill: red; -fx-font-weight: bold;");
            }
            
            stage.setScene(AccountInformationDisplayScene);
        });
        stage.show();
    }
    public static void main(String args[]) throws IOException
    {
        launch(args);
    }
}
